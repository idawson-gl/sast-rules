# yamllint disable
# maps bandit rule ids to semgrep rules
# License: MIT (c) GitLab Inc.
# yamllint enable
---
bandit:
  native_id:
    type: "bandit_test_id"
    name: "Bandit Test ID $ID"
    value: "$ID"
  mappings:
  - id: "B101"
    rules:
    - "python/assert/rule-assert_used"
  - id: "B102"
    rules:
    - "python/exec/rule-exec_used"
  - id: "B103"
    rules:
    - "python/file_permissions/rule-general_bad_permission"
  - id: "B104"
    rules:
    - "python/bind_all_interfaces/rule-general_bindall_interfaces"
  - id: "B105"
    rules:
    - "python/secrets/rule-hardcoded_password_string"
  - id: "B106"
    rules:
    - "python/secrets/rule-hardcoded_password_funcarg"
  - id: "B107"
    rules:
    - "python/secrets/rule-hardcoded_password_default"
  - id: "B108"
    rules:
    - "python/tmpdir/rule-specialdir"
    - "python/tmpdir/rule-hardcodedtmp"
  - id: "B110"
    rules:
    - "python/exception/rule-try_except_pass"
  - id: "B112"
    rules:
    - "python/exception/rule-try_except_continue"
  - id: "B201"
    rules:
    - "python/flask/rule-app_debug"
  - id: "B301"
    rules:
    - "python/deserialization/rule-cpickle"
    - "python/deserialization/rule-shelve"
    - "python/deserialization/rule-pickle"
    - "python/deserialization/rule-dill"
  - id: "B302"
    rules:
    - "python/deserialization/rule-marshal"
  - id: "B303"
    rules:
    - "python/crypto/rule-hash_md2"
    - "python/crypto/rule-crypto.hazmat_hash_md5"
    - "python/crypto/rule-crypto_hash_md5"
    - "python/crypto/rule-crypto.hazmat_hash_sha1"
    - "python/crypto/rule-hash_md5"
    - "python/crypto/rule-crypto_hash_sha1"
    - "python/crypto/rule-hash_md4"
    - "python/crypto/rule-hash_sha1"
  - id: "B304"
    rules:
    - "python/crypto/rule-crypto_cipher_xor"
    - "python/crypto/rule-crypto_hazmat_cipher_arc4"
    - "python/crypto/rule-crypto_hazmat_cipher_idea"
    - "python/crypto/rule-crypto_hazmat_cipher_blowfish"
    - "python/crypto/rule-crypto_cipher_rc2"
    - "python/crypto/rule-crypto_cipher_des"
    - "python/crypto/rule-crypto_cipher_blowfish"
    - "python/crypto/rule-crypto_cipher_rc4"
  - id: "B305"
    rules:
    - "python/crypto/rule-cipher_modes"
  - id: "B306"
    rules:
    - "python/tmpdir/rule-mktemp_q"
  - id: "B307"
    rules:
    - "python/eval/rule-eval"
  - id: "B309"
    rules:
    - "python/https/rule-httpsconnection"
  - id: "B310"
    rules:
    - "python/urlopen/rule-urllib_urlopen1"
    - "python/urlopen/rule-urllib_urlopen2"
  - id: "B311"
    rules:
    - "python/random/rule-random"
  - id: "B312"
    rules:
    - "python/telnet/rule-telnetlib"
  - id: "B313"
    rules:
    - "python/xml/rule-celement"
  - id: "B314"
    rules:
    - "python/xml/rule-element"
  - id: "B315"
    rules:
    - "python/xml/rule-expatreader"
  - id: "B316"
    rules:
    - "python/xml/rule-expatbuilder"
  - id: "B317"
    rules:
    - "python/xml/rule-sax"
  - id: "B318"
    rules:
    - "python/xml/rule-minidom"
  - id: "B319"
    rules:
    - "python/xml/rule-pulldom"
  - id: "B320"
    rules:
    - "python/xml/rule-etree"
  - id: "B321"
    rules:
    - "python/ftp/rule-ftplib"
  - id: "B323"
    rules:
    - "python/ssl/rule-unverified_context"
  - id: "B324"
    rules:
    - "python/crypto/rule-hashlib_new_insecure_functions"
  - id: "B325"
    rules:
    - "python/tmpdir/rule-tempnam"
  - id: "B401"
    rules:
    - "python/telnet/rule-import_telnib"
  - id: "B402"
    rules:
    - "python/ftp/rule-import_ftplib"
  - id: "B403"
    rules:
    - "python/xml/rule-import_pickle"
  - id: "B404"
    rules:
    - "python/exec/rule-import_subprocess"
  - id: "B405"
    rules:
    - "python/xml/rule-import_etree"
  - id: "B406"
    rules:
    - "python/xml/rule-import_sax"
  - id: "B407"
    rules:
    - "python/xml/rule-import_expat"
  - id: "B408"
    rules:
    - "python/xml/rule-import_minidom"
  - id: "B409"
    rules:
    - "python/xml/rule-import_pulldom"
  - id: "B410"
    rules:
    - "python/xml/rule-import_lxml"
  - id: "B411"
    rules:
    - "python/xml/rule-import_xmlrpclib"
  - id: "B412"
    rules:
    - "python/cgi/rule-import_httpoxy"
  - id: "B413"
    rules:
    - "python/crypto/rule-import_pycrypto"
  - id: "B501"
    rules:
    - "python/ssl/rule-req_no_certvalid"
  - id: "B502"
    rules:
    - "python/ssl/rule-ssl_with_bad_version"
  - id: "B504"
    rules:
    - "python/ssl/rule-ssl_no_version"
  - id: "B505"
    rules:
    - "python/crypto/rule-crypto_encrypt_dsa_rsa"
    - "python/crypto/rule-crypto_encrypt_ec"
  - id: "B506"
    rules:
    - "python/deserialization/rule-yaml_load"
  - id: "B507"
    rules:
    - "python/ssh/rule-ssl_nohost_key_verification"
  - id: "B601"
    rules:
    - "python/exec/rule-paramiko_calls"
  - id: "B602"
    rules:
    - "python/exec/rule-subprocess_popen_shell_true"
  - id: "B603"
    rules:
    - "python/exec/rule-subprocess_call"
  - id: "B604"
    rules:
    - "python/exec/rule-subprocess_shell_TRUE"
  - id: "B605"
    rules:
    - "python/exec/rule-os_popen2"
  - id: "B606"
    rules:
    - "python/exec/rule-start_process_with_no_shell"
  - id: "B607"
    rules:
    - "python/exec/rule-os_path"
  - id: "B608"
    rules:
    - "python/sql/rule-hardcoded_sql_expression"
  - id: "B609"
    rules:
    - "python/exec/rule-linux_command_wildcard_injection"
  - id: "B610"
    rules:
    - "python/django/rule-django_extra_used"
  - id: "B611"
    rules:
    - "python/django/rule-django_rawsql_used"
  - id: "B701"
    rules:
    - "python/escaping/rule-jinja2_autoescape_false"
  - id: "B702"
    rules:
    - "python/escaping/rule-use_of_mako_templates"
  - id: "B703"
    rules:
    - "python/escaping/rule-mark_safe"
